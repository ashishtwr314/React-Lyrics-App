{"version":3,"sources":["components/lg.equalizer-bars-loader.gif","components/Navbar.jsx","context.jsx","components/Spinner.jsx","components/Track.jsx","components/Tracks.jsx","components/Search.jsx","components/Index.jsx","components/Lyrics.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","Fragment","className","Component","Context","React","createContext","reducer","state","action","type","Object","objectSpread","tracks","payload","heading","Provider","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetch","concat","process","then","response","json","responseJson","setState","message","body","track_list","catch","error","console","dispatch","inherits","createClass","key","value","children","Consumer","Spinner","src","spinnerImage","alt","Track","log","track","track_name","artist_name","Link","to","track_id","Tracks","undefined","length","components_Spinner","map","components_Track","Search","onClick","e","preventDefault","song","onChange","target","_this2","name","placeholder","bind","Index","components_Search","components_Tracks","Lyrics","match","params","id","lyrics","lyrics_body","genre","primary_genres","music_genre_list","music_genre","music_genre_name_extended","rel_date","first_release_date","album_art","width","dist_default","format","App","context_Provider","BrowserRouter","components_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.091d32ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lg.equalizer-bars-loader.cb17b80a.gif\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Navbar extends Component {\r\n   \r\n    render() { \r\n        return ( \r\n                <React.Fragment>\r\n                    <h2 className=\"logo text-center\"> Lyrics Finder </h2>\r\n                </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"SEARCH_TRACKS\":\r\n            return{\r\n                ...state,\r\n                tracks: action.payload,\r\n                heading: \"Search Results\"\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            tracks : [],\r\n            heading : \"Top 10 tracks\" ,\r\n            dispatch : action => this.setState( state => reducer(state, action) )\r\n         }\r\n    }\r\n\r\n    componentDidMount = ()=> {\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_API_KEY}`)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                this.setState({\r\n                    tracks : responseJson.message.body.track_list\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <Context.Provider value={this.state}>\r\n                     {this.props.children}\r\n            </Context.Provider>\r\n         );\r\n    }\r\n}\r\n \r\nexport  const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport spinnerImage from './lg.equalizer-bars-loader.gif';\r\n\r\nclass Spinner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"center\" >\r\n                <img src={spinnerImage} alt=\"Loading\"/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Spinner;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Track extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"col-lg-6\">\r\n        <div className=\"tracks-card\">\r\n          <h4>{this.props.track.track_name}</h4>\r\n          <p>{this.props.track.artist_name}</p>\r\n          <Link\r\n            to={`/lyrics/${this.props.track.track_id}`}\r\n            className=\"btn btn-block btn-primary\"\r\n          >\r\n            View Lyrics\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Consumer } from './../context';\r\nimport Spinner from './Spinner';\r\nimport Track from './Track';\r\n\r\nclass Tracks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n            \r\n                <Consumer>\r\n                    {\r\n                        value=>{\r\n                            if(value.tracks === undefined || value.tracks.length === 0){\r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <Spinner />\r\n                                    </React.Fragment>\r\n                                )\r\n                            }\r\n                            else{\r\n                                return (                             \r\n                                    <React.Fragment>\r\n                                        <h2 className=\"heading text-center\">{value.heading}</h2>\r\n                                        <div className=\"row\">\r\n                                            {value.tracks.map(value =>(\r\n                                                <Track key={value.track.track_id} track={value.track} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </React.Fragment>\r\n                                \r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n                </Consumer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Tracks;","import React, { Component } from 'react';\r\nimport { Consumer } from '../context';\r\n\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            song: \"\"\r\n         }\r\n    }\r\n    onClick = (dispatch, e) =>{\r\n        e.preventDefault();\r\n        \r\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track_artist=${this.state.song}&q_lyrics=${this.state.song}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_API_KEY}`)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                dispatch({\r\n                    type: \"SEARCH_TRACKS\",\r\n                    payload:  responseJson.message.body.track_list\r\n                })\r\n                \r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n        \r\n    }\r\n\r\n    onChange = (e) =>{\r\n        this.setState({\r\n            song: e.target.value\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <Consumer>\r\n                {value => {\r\n                    return(\r\n\r\n                        <React.Fragment>\r\n                            <div className=\"card text-center\">\r\n\r\n                                    <h2 className=\"text-center\">Search For a Song</h2>\r\n                                    <form className=\"text-center\">\r\n                                        <div className=\"form-group\">\r\n                                            <input onChange={this.onChange} value={this.state.song} type=\"text\" className=\"form-control\" name=\"song\" placeholder=\"Enter a song name\" />\r\n                                            <button onClick={this.onClick.bind(this, value.dispatch)} className=\"btn btn-primary\" type=\"submit\">Get lyrics</button>\r\n                                        </div>\r\n                                    </form>\r\n                                    \r\n                            </div>\r\n                        </React.Fragment>\r\n\r\n                    )\r\n\r\n\r\n                }}\r\n                   \r\n            </Consumer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React, { Component } from 'react';\r\nimport Tracks from './Tracks';\r\nimport Search from './Search';\r\n\r\nclass Index extends Component {\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <Search />\r\n                <Tracks />\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Index;","import React, { Component } from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass Lyrics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lyrics: \"\",\r\n      track_name: \"\",\r\n      artist_name: \"\",\r\n      genre: \"No Genre Specified\",\r\n      album_art: \"https://i.ya-webdesign.com/images/cd-album-cover-png-6.png\",\r\n      rel_date: \"Released info not available\"\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_API_KEY}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        // responseJson.message.body.lyrics.lyrics_body = responseJson.message.body.lyrics.lyrics_body.replace(new RegExp('\\r?\\n','g'), \" \");\r\n        this.setState({\r\n          lyrics: responseJson.message.body.lyrics.lyrics_body\r\n        });\r\n        return fetch(\r\n          `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_API_KEY}`\r\n        );\r\n      })\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        console.log(responseJson);\r\n        this.setState({\r\n          track_name: responseJson.message.body.track.track_name,\r\n          artist_name: responseJson.message.body.track.artist_name,\r\n          genre:\r\n            responseJson.message.body.track.primary_genres.music_genre_list[0]\r\n              .music_genre.music_genre_name_extended,\r\n          //   album_art: responseJson.message.body.track.album_coverart_100x100,\r\n          rel_date: responseJson.message.body.track.first_release_date\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.lyrics === \"\") {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-sm-6 col-md-6 \">\r\n              <h3 className=\"track\">{this.state.track_name}</h3>\r\n              <h4 className=\"artist\">\r\n                <small>{this.state.artist_name}</small>\r\n              </h4>\r\n              <p className=\"lyrics\">{this.state.lyrics}</p>\r\n            </div>\r\n            <div className=\"col-lg-6 col-sm-6 col-md-6 \">\r\n              <img\r\n                width=\"120px\"\r\n                src={this.state.album_art}\r\n                alt=\"AlbumArt\"\r\n                className=\"album-art\"\r\n              />\r\n              <h3>{this.state.genre}</h3>\r\n              <br />\r\n              <h3>\r\n                <Moment format=\"DD/MM/YYYY\">{this.state.rel_date}</Moment>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Index from './components/Index';\nimport { Provider } from './context';\nimport Lyrics from './components/Lyrics';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Navbar />\n\n            <div className=\"container\">\n              <Switch>\n                <div>\n                  <Route exact path=\"/\" component={Index} />\n                  <Route exact path=\"/lyrics/:id\" component={Lyrics} />\n                </div>\n              </Switch>\n            </div>\n\n          </React.Fragment>\n        </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Spinner from './components/Spinner';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n//https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.params.id}&apikey=${process.env.REACT_APP_API_KEY}"],"sourceRoot":""}